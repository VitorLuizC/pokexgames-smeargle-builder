{"version":3,"sources":["assets/icons/Loupe.svg","helpers/identity.js","components/SortableTable.js","components/PokemonName.js","helpers/normalize.js","components/SearchField.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","identity","value","Sortment","Object","freeze","NONE","ASCENDING","DESCENDING","SortableTable","_ref2","rows","cols","_useState","useState","undefined","_useState2","slicedToArray","sorter","setSorter","_useState3","_useState4","sortment","setSortment","_useState5","_useState6","page","setPage","_useState7","_useState8","resultsPerPage","setResultsPerPage","pages","Math","ceil","length","useEffect","onChangeFor","col","_Sortment$NONE$Sortme","defineProperty","isFirst","isLast","react_default","a","createElement","Fragment","className","map","index","isSorting","classNames","concat","key","onClick","style","textAlign","align","label","slice","paginateRows","compare","_ref","arguments","sort","_ref$value","rowA","rowB","valueA","valueB","String","localeCompare","Number","resolveCompare","toConsumableArray","reverse","sortRows","row","_ref3","render","_ref3$value","_ref3$align","onChange","event","target","disabled","PokemonName","icon","link","name","title","rel","href","src","alt","normalize","toLocaleLowerCase","replace","trim","SearchField","placeholder","id","Date","now","onSubmit","preventDefault","htmlFor","Loupe","type","App","term","setTerm","filteredMoves","moves","filter","move","pokemon","some","includes","filterBy","SearchField_SearchField","components_SortableTable","position","moveA","moveB","toValue","exec","_ref2$","PokemonName_PokemonName","cooldown","_ref4","level","_ref5","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdfe11be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Loupe.73d0609a.svg\";","/**\r\n * Returns the value received.\r\n * @param {T} value\r\n * @returns {T}\r\n * @template T\r\n */\r\nexport default function identity(value) {\r\n  return value;\r\n}\r\n","import \"./SortableTable.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport identity from \"../helpers/identity\";\r\n\r\nconst Sortment = Object.freeze({\r\n  NONE: 0,\r\n  ASCENDING: 1,\r\n  DESCENDING: 2\r\n});\r\n\r\n/**\r\n * Resolves compare function from sorter column.\r\n * @param {TableCol<T>} col\r\n * @returns {(rowA: T, rowB: T) => number}\r\n * @template T\r\n */\r\nfunction resolveCompare({ sort, value = identity } = {}) {\r\n  if (typeof sort === \"function\") {\r\n    return sort;\r\n  }\r\n\r\n  return (rowA, rowB) => {\r\n    const valueA = value(rowA),\r\n      valueB = value(rowB);\r\n\r\n    if (typeof valueA === \"string\" || typeof valueB === \"string\")\r\n      return String(valueA).localeCompare(String(valueB));\r\n    if (typeof valueA === \"number\" || typeof valueB === \"number\")\r\n      return Number(valueA) - Number(valueB);\r\n    return 0;\r\n  };\r\n}\r\n\r\nfunction SortableTable({ rows, cols }) {\r\n  const [sorter, setSorter] = useState(undefined);\r\n  const [sortment, setSortment] = useState(Sortment.NONE);\r\n  const [page, setPage] = useState(0);\r\n  const [resultsPerPage, setResultsPerPage] = useState(10);\r\n\r\n  const pages = Math.ceil(rows.length / resultsPerPage);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [rows]);\r\n\r\n  const sortRows = rows => {\r\n    if (sortment === Sortment.NONE) {\r\n      return rows;\r\n    }\r\n\r\n    const compare = resolveCompare(sorter);\r\n\r\n    if (sortment === Sortment.ASCENDING) {\r\n      return [...rows].sort(compare);\r\n    }\r\n\r\n    if (sortment === Sortment.DESCENDING) {\r\n      return [...rows].sort(compare).reverse();\r\n    }\r\n  };\r\n\r\n  const onChangeFor = col => () => {\r\n    setPage(0);\r\n    setSorter(sortment === Sortment.DESCENDING ? undefined : col);\r\n    setSortment(\r\n      {\r\n        [Sortment.NONE]: Sortment.ASCENDING,\r\n        [Sortment.ASCENDING]: Sortment.DESCENDING,\r\n        [Sortment.DESCENDING]: Sortment.NONE\r\n      }[sortment]\r\n    );\r\n  };\r\n\r\n  const paginateRows = rows =>\r\n    rows.slice(resultsPerPage * page, resultsPerPage * page + resultsPerPage);\r\n\r\n  const isFirst = page === 0;\r\n  const isLast = page === pages - 1;\r\n\r\n  return (\r\n    <>\r\n      <table className=\"sortable-table\">\r\n        <thead className=\"header\">\r\n          <tr className=\"row\">\r\n            {cols.map((col, index) => {\r\n              const isSorting = sorter === col;\r\n              const classNames = `cell ${\r\n                isSorting ? \"-sorting\" : \"-unsorting\"\r\n              }`;\r\n              return (\r\n                <th\r\n                  key={index}\r\n                  className={classNames}\r\n                  onClick={onChangeFor(col)}\r\n                  style={{ textAlign: col.align || \"left\" }}\r\n                >\r\n                  <span className=\"label\">{col.label}</span>\r\n\r\n                  <span className=\"arrow\">\r\n                    {isSorting && sortment === Sortment.ASCENDING ? \"▲\" : \"▼\"}\r\n                  </span>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"content\">\r\n          {paginateRows(sortRows(rows)).map((row, index) => (\r\n            <tr className=\"row\" key={index}>\r\n              {cols.map((col, index) => {\r\n                const { render, value = identity, align = \"left\" } = col || {};\r\n\r\n                return (\r\n                  <td key={index} style={{ textAlign: align }} className=\"cell\">\r\n                    {render ? render({ row, index }) : value(row)}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"pagination\">\r\n        <div className=\"results\">\r\n          <label className=\"label\">Results per page</label>\r\n\r\n          <select\r\n            value={resultsPerPage}\r\n            className=\"field\"\r\n            onChange={event => {\r\n              const value = +event.target.value;\r\n              setPage(0);\r\n              setResultsPerPage(value);\r\n            }}\r\n          >\r\n            {[10, 25, 50, 100].map(value => (\r\n              <option key={value} value={value}>\r\n                {value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <button\r\n            className=\"button\"\r\n            disabled={isFirst}\r\n            onClick={() => setPage(0)}\r\n          >\r\n            First\r\n          </button>\r\n          <button\r\n            className=\"button\"\r\n            disabled={isFirst}\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Previous\r\n          </button>\r\n          <p className=\"current\">\r\n            {page + 1} / {pages}\r\n          </p>\r\n          <button\r\n            className=\"button\"\r\n            disabled={isLast}\r\n            onClick={() => setPage(page + 1)}\r\n          >\r\n            Next\r\n          </button>\r\n          <button\r\n            className=\"button\"\r\n            disabled={isLast}\r\n            onClick={() => setPage(pages - 1)}\r\n          >\r\n            Last\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SortableTable;\r\n","import \"./PokemonName.scss\";\r\nimport React from \"react\";\r\n\r\nexport default function PokemonName({ icon, link, name }) {\r\n  const title = \"Icon for \" + name;\r\n\r\n  return (\r\n    <a\r\n      rel=\"noopener noreferrer\"\r\n      href={link}\r\n      target=\"_blank\"\r\n      className=\"pokemon-name\"\r\n    >\r\n      <figure className=\"icon\">\r\n        <img className=\"image\" src={icon} alt={name} title={title} />\r\n      </figure>\r\n\r\n      <span className=\"name\">{name}</span>\r\n    </a>\r\n  );\r\n}\r\n","/**\r\n * Normalizes string values.\r\n * @param {string} [value]\r\n * @returns {string}\r\n */\r\nexport default function normalize(value) {\r\n  return (value || \"\")\r\n    .toLocaleLowerCase()\r\n    .replace(/\\s+/g, \" \")\r\n    .trim();\r\n}\r\n","import \"./SearchField.scss\";\r\nimport React from \"react\";\r\nimport Loupe from \"../assets/icons/Loupe.svg\";\r\n\r\nexport default function SearchField({ value, placeholder, onChange }) {\r\n  const id = \"id-\" + Date.now();\r\n\r\n  return (\r\n    <form className=\"search-field\" onSubmit={event => event.preventDefault()}>\r\n      <label className=\"label\" htmlFor={id}>\r\n        <img className=\"icon\" src={Loupe} alt=\"Search\" title=\"Loupe icon.\" />\r\n      </label>\r\n\r\n      <input\r\n        id={id}\r\n        type=\"search\"\r\n        value={value}\r\n        className=\"field\"\r\n        placeholder={placeholder}\r\n        onChange={event => onChange(event.target.value)}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import \"./App.scss\";\r\nimport moves from \"./data.json\";\r\nimport SortableTable from \"./components/SortableTable\";\r\nimport React, { useState } from \"react\";\r\nimport PokemonName from \"./components/PokemonName\";\r\nimport normalize from \"./helpers/normalize\";\r\nimport SearchField from \"./components/SearchField\";\r\n\r\n/**\r\n * Returns a filter function by term.\r\n * @param {string} term\r\n * @returns {(move: Move) => boolean}\r\n */\r\nfunction filterBy(term) {\r\n  return move => {\r\n    if (!term) {\r\n      return true;\r\n    }\r\n\r\n    const targets = [move.name, move.type, move.pokemon.name].map(normalize);\r\n\r\n    return targets.some(target => target.includes(normalize(term)));\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  const filteredMoves = moves.filter(filterBy(term));\r\n\r\n  return (\r\n    <main className=\"App\">\r\n      <SearchField\r\n        value={term}\r\n        onChange={setTerm}\r\n        placeholder=\"Search by Pokémon, move name or even type.\"\r\n      />\r\n\r\n      <SortableTable\r\n        rows={filteredMoves}\r\n        cols={[\r\n          {\r\n            label: \"Position\",\r\n            value: move => move.position,\r\n            align: \"center\",\r\n            sort: (moveA, moveB) => {\r\n              const toValue = move => {\r\n                const [, value = 10000] =\r\n                  /M(\\d+)/i.exec(move.position || \"\") || [];\r\n                return +value;\r\n              };\r\n\r\n              return toValue(moveA) - toValue(moveB);\r\n            }\r\n          },\r\n          {\r\n            label: \"Pokémon\",\r\n            value: move => move.pokemon.name,\r\n            render: ({ row: move }) => (\r\n              <PokemonName\r\n                icon={move.pokemon.icon}\r\n                link={move.pokemon.link}\r\n                name={move.pokemon.name}\r\n              />\r\n            )\r\n          },\r\n          {\r\n            label: \"Move\",\r\n            value: move => move.name\r\n          },\r\n          {\r\n            label: \"Type\",\r\n            value: move => move.type\r\n          },\r\n          {\r\n            label: \"Cooldown\",\r\n            align: \"right\",\r\n            value: move => move.cooldown || 0,\r\n            render: ({ row: move }) =>\r\n              move.cooldown ? move.cooldown + \"s\" : \"-\"\r\n          },\r\n          {\r\n            label: \"Level\",\r\n            align: \"right\",\r\n            value: move => move.level || 0,\r\n            render: ({ row: move }) => (move.level ? move.level : \"-\")\r\n          }\r\n        ]}\r\n      />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}